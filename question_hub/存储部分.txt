大概想法：mysql、redis、hbase

Q: redis和memcache的区别？

Q: redis缓存击穿的方案有哪些？

Q: redis持久化方式有哪些？

Q: redis服务不可用时，持久化方式有何影响？

Q: mysql的事务隔离级别，有什么问题？丢失更新会发生在什么级别？

Q: innoDB和MYISAM的区别？

Q: mysql的索引有哪些？区别是什么？

Q: mysql的锁有哪些？意向锁是什么？

Q: 数据库锁释放时抛异常了，没有释放掉怎么办？
A: 加锁和解锁必须在一个数据库连接里

Q: redis负载均衡的实现？

Q: redis分布式锁，如果上锁失败怎么办

Q: mysql表的扩容

Q: 缓存穿透
A: 查询一个一定不存在的数据，由于缓存是不命中时需要从数据库查询，查不到数据则不写入缓存，这将导致每次查询不存在的数据都会访问数据库。
	解决方案：
	1. 缓存空值。若查询返回的数据为空，直接缓存一个默认值（比如null），下次查询就有值了。注意，过期时间设置的要较短。
	2. 布隆过滤器。是一个很长的二进制向量和一系列随机映射函数。可以检索一个元素是否在一个集合中。优点是空间效率和查询时间都快，缺点是有一定的误识别率和删除困难。

Q: 缓存击穿
A: 一条数据在缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，在缓存中没有读到数据又同时去数据库查询，
	造成数据库压力过大。例如热点key，重大新闻，微博热搜，而缓存构建需要时间。
	解决方案：
	1. 热点数据缓存永不过期。将过期时间设置在value中。
	2. 加互斥锁，去查数据库时需要先获得互斥锁，查询后设置缓存。要能根据key来加锁，获取A数据不影响其他线程获取B数据。

Q: 缓存雪崩
A: 缓存在一段时间内大量失效，所有查询落在了数据库，造成了缓存雪崩。与缓存击穿不同的是，缓存击穿指并发查同一条数据，
	缓存雪崩是不同数据都过期了，从而查数据库。
	解决方案：
	1. 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。
	2. 使用锁或队列，在缓存失效后，加锁或者队列来控制读数据库或者写缓存的线程数量。
	3. 数据预热，通过缓存的reload机制，预先去更新缓存。
	4. 二级缓存，设置两层缓存，缓存A过期时间较短，缓存B过期时间较长。
	5. 缓存永不过期，不设置过期时间，将过期时间设置在value中。
	
	
	